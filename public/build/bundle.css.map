{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Button.svelte",
    "../../Canvas.svelte",
    "../../Container.svelte",
    "../../Controls.svelte",
    "../../Node.svelte"
  ],
  "sourcesContent": [
    "<script>\n\n\timport Canvas from './components/Canvas.svelte';\n\timport Controls from './components/Controls.svelte';\n\timport Container from './components/Container.svelte';\n\n\timport { Network } from './classes/network.js';\n\n\tconst model = new Network( 21 );\n\tlet net = model;\n\n\tconsole.log( model );\n\n\tlet positive = Math.round( model.state ) === 1;\n\tlet g = net.state * 255;\n\tdocument.body.style.backgroundColor = `rgba(${g},${g},${g})`;\n\n\tfunction update(event){\n\t\tnet = model;\n\t\tpositive = Math.round( model.state ) === 1;\n\t\tg = net.state * 255;\n\t\tdocument.body.style.backgroundColor = `rgba(${g},${g},${g})`;\n\t}\n\n</script>\n\n<Canvas />\n\n<Container network={net} on:update={update} />\n\n<!-- <Controls /> -->\n\n<div class=\"state\">\n\t<input disabled type=\"checkbox\" id=\"checkbox\" bind:checked={positive}>\n\t{Math.round(net.state*100)} %\n</div>\n\n<style>\n\t.state {\n        margin: 1rem;\n    }\n</style>\n",
    "<script>\n\n    import { createEventDispatcher } from 'svelte';\n\n\tconst dispatch = createEventDispatcher();\n\n\tfunction click() {\n\t\tdispatch('click');\n    }\n\n</script>\n\n<button on:click={click}>\n    <slot>Button</slot>\n</button>\n\n<style>\n\n    button {\n        padding: 0.3rem;\n        margin: 0.3rem;\n        background-color: #ccc;\n        border-radius: 5px;\n        transition: background-color 300ms ease, color 300ms ease;\n    }\n    button:hover {\n        background-color: #ff0;\n    }\n\n</style>\n",
    "<canvas id=\"canvas\" resize></canvas>\n\n<style>\n\n    canvas {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n    }\n\n</style>\n",
    "<script>\n\n    import { createEventDispatcher } from 'svelte';\n\n\tconst dispatch = createEventDispatcher();\n\n    import Node from './Node.svelte';\n    export let network;\n\n    function update() {\n\t\tdispatch('update');\n    }\n\n</script>\n\n<div id=\"container\">\n\n    {#each network.nodes as node}\n        <Node {node} on:update={update} />\n    {/each}\n\n</div>\n\n<style>\n\n    #container {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        -webkit-user-select: none;\n        user-select: none;\n    }\n\n</style>\n",
    "<script>\n    import Button from './Button.svelte';\n\n    function addNode(){\n        console.log('addNode()');\n    }\n    function removeNode(){\n        console.log('removeNode()');\n    }\n</script>\n\n<div id=\"controls\">\n    <Button on:click={addNode}>Add Node</Button>\n    <Button on:click={removeNode}>Remove Node</Button>\n</div>\n\n<style>\n\n    #controls {\n        position: fixed;\n        right: 0;\n        bottom: 0;\n        padding: 0.5rem;\n        z-index: 10;\n\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n    }\n\n</style>\n",
    "<script>\n\n    import { createEventDispatcher } from 'svelte';\n\n\tconst dispatch = createEventDispatcher();\n\n    export let node;\n\n    let x = (window.innerWidth * 0.05) + ( node.position.x * window.innerWidth * 0.78);\n    let y = (window.innerHeight * 0.05) + ( node.position.y * window.innerHeight * 0.82);\n\n    let positive = Math.round(node.state) === 1;\n    let g = node.state * 255;\n\n    function updateState() {\n        if( positive === true ){\n            positive = false;\n            node.state = 0;\n        } else {\n            positive = true;\n            node.state = 1;\n        }\n        g = node.state * 255;\n\t\tdispatch('update');\n    }\n\n\n</script>\n\n<div class=\"node\" style=\"top:{y}px; left:{x}px; background-color:rgba({g},{g},{g});\" class:positive>\n    <input type=\"checkbox\" id=\"checkbox\" bind:checked={positive} on:click={updateState}>\n    <span>{Math.round(node.state * 100)} %</span>\n</div>\n\n<style>\n\n    .node {\n        position: absolute;\n        z-index: 5;\n        background-color: #000;\n        color: #fff;\n        padding: 0.3rem;\n        border-radius: 5px;\n        min-width: 8em;\n        line-break: none;\n        user-select: none;\n        box-shadow: 0px 0px 5px rgba(0,0,0,0.4);\n        transition: background-color 500ms ease, color 500ms ease;\n    }\n\n    .node.positive {\n        color: #000;\n    }\n\n    input {\n        display: inline-block;\n    }\n\n    span {\n        display: inline-block;\n        cursor: grab;\n    }\n\n</style>\n"
  ],
  "names": [],
  "mappings": "AAsCC,MAAM,eAAC,CAAC,AACD,MAAM,CAAE,IAAI,AAChB,CAAC;ACtBD,MAAM,eAAC,CAAC,AACJ,OAAO,CAAE,MAAM,CACf,MAAM,CAAE,MAAM,CACd,gBAAgB,CAAE,IAAI,CACtB,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,AAC7D,CAAC,AACD,qBAAM,MAAM,AAAC,CAAC,AACV,gBAAgB,CAAE,IAAI,AAC1B,CAAC;ACvBD,MAAM,cAAC,CAAC,AACJ,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AAChB,CAAC;ACeD,UAAU,eAAC,CAAC,AACR,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,mBAAmB,CAAE,IAAI,CACzB,WAAW,CAAE,IAAI,AACrB,CAAC;ACfD,SAAS,cAAC,CAAC,AACP,QAAQ,CAAE,KAAK,CACf,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,MAAM,CACf,OAAO,CAAE,EAAE,CAEX,mBAAmB,CAAE,IAAI,CACzB,gBAAgB,CAAE,IAAI,CACtB,eAAe,CAAE,IAAI,CACrB,WAAW,CAAE,IAAI,AACrB,CAAC;ACOD,KAAK,eAAC,CAAC,AACH,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,CAAC,CACV,gBAAgB,CAAE,IAAI,CACtB,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,MAAM,CACf,aAAa,CAAE,GAAG,CAClB,SAAS,CAAE,GAAG,CACd,UAAU,CAAE,IAAI,CAChB,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACvC,UAAU,CAAE,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,AAC7D,CAAC,AAED,KAAK,SAAS,eAAC,CAAC,AACZ,KAAK,CAAE,IAAI,AACf,CAAC,AAED,KAAK,eAAC,CAAC,AACH,OAAO,CAAE,YAAY,AACzB,CAAC,AAED,IAAI,eAAC,CAAC,AACF,OAAO,CAAE,YAAY,CACrB,MAAM,CAAE,IAAI,AAChB,CAAC"
}